pipeline {
    agent any
    options {
        skipDefaultCheckout(true)
    }
    stages {
        stage('Code checkout from GitHub') {
            steps {
                script {
                    cleanWs()
                    git credentialsId: 'github-token', url: 'https://github.com/AdamKazmierczak/abcd-student', branch: 'develop'
                }
            }
        }
        stage('SCA scan') {
            steps {
                script {
                    // Ensure results directory exists
                    sh 'mkdir -p results'
                    
                    // Run osv-scanner and capture exit status
                    def exitCode = sh(returnStatus: true, script: 'osv-scanner scan --lockfile package-lock.json --format json --output results/sca-osv-scanner.json')
                    
                    // Log the exit code
                    echo "OSV scanner finished with exit code: ${exitCode}"
                    
                    // Check if scan failed
                    if (exitCode != 0) {
                        echo "Warning: OSV scanner returned a non-zero exit code."
                    }
                }
            }
        }
        stage('Read and Print SCA Report') {
            steps {
                script {
                    // Read the JSON report file
                    def report = readJSON file: 'results/sca-osv-scanner.json'
                    
                    // Check if 'vulns' key exists and process vulnerabilities
                    if (report.containsKey('vulns')) {
                        echo "Vulnerabilities found:"
                        report.vulns.each { vuln ->
                            echo "Package: ${vuln.package.name ?: 'N/A'}"
                            echo "Version: ${vuln.package.version ?: 'N/A'}"
                            echo "Vulnerability ID: ${vuln.vulnerability_id ?: 'N/A'}"
                            echo "Summary: ${vuln.summary ?: 'N/A'}"
                            echo "Severity: ${vuln.severity ?: 'N/A'}"
                            echo "Fixed Version: ${vuln.fix_version ?: 'N/A'}"
                            echo "-" * 40
                        }
                    } else {
                        echo "No vulnerabilities found in the report."
                    }
                }
            }
        }
    }
    post {
        always {
            // Archive the report from the specified directory
            archiveArtifacts artifacts: 'results/zap_xml_report.xml', 
                             allowEmptyArchive: true

            // Publish the report to DefectDojo
            defectDojoPublisher(artifact: 'results/sca-osv-scanner.json', 
                productName: 'Juice Shop', 
                scanType: 'OSV Scan', 
                engagementName: 'adaml.kazmierczak@gmail.com')
        }
    }
}
