pipeline {
    agent any
    options {
        skipDefaultCheckout(true)
    }
    stages {
        stage('Code checkout from GitHub') {
            steps {
                script {
                    cleanWs()
                    git credentialsId: 'github-token', url: 'https://github.com/AdamKazmierczak/abcd-student', branch: 'develop'
                }
            }
        }
        stage('SCA scan') {
            steps {
                script {
                    // Ensure results directory exists
                    sh 'mkdir -p results'
                    
                    // Run osv-scanner and capture both output and exit code
                    def exitCode = sh(returnStatus: true, script: 'osv-scanner scan --lockfile package-lock.json --format json --output results/sca-osv-scanner.json')
                    
                    // Log the exit code
                    echo "OSV scanner finished with exit code: ${exitCode}"
                    
                    // Check if scan failed
                    if (exitCode != 0) {
                        echo "Warning: OSV scanner returned a non-zero exit code."
                    }
                }
            }
        }
        stage('Read and Print SCA Report') {
            steps {
                script {
                    // Read the JSON output from the scan
                    def scaReport = readJSON file: 'results/sca-osv-scanner.json'
                    
                    // Check if there are any vulnerabilities
                    if (scaReport.vulnerabilities && scaReport.vulnerabilities.size() > 0) {
                        echo "Vulnerabilities found:"
                        for (vuln in scaReport.vulnerabilities) {
                            echo """
                            Vulnerability: ${vuln.id}
                            Package: ${vuln.package.name}
                            Affected Versions: ${vuln.affected[0].ranges[0].events[0].introduced}
                            Severity: ${vuln.database_specific.severity}
                            URL: ${vuln.references[0].url}
                            """
                        }
                    } else {
                        echo "No vulnerabilities found in the report."
                    }
                }
            }
        }
    }
    post {
        always {
            // Archive the OSV scan report for later review
            archiveArtifacts artifacts: 'results/sca-osv-scanner.json', allowEmptyArchive: true
        }
    }
}
